@using ClientDependency.Core.Mvc

@{
    ViewBag.Title = "Upload Demo";

    Html.RequiresCss("Bootstrap/bootstrap.min.css", "Content", 2);
    Html.RequiresCss("Bootstrap/bootstrap-responsive.min.css", "Content", 3);
    Html.RequiresCss("FileUpload/jquery.fileupload-ui.css", "Content", 5);

    Html.RequiresJs("jquery-1.11.0.js", "Scripts", 1);
    Html.RequiresJs("jquery-migrate-1.2.1.js", "Scripts", 2);
    Html.RequiresJs("jquery-ui-1.9.2.custom.js", "Scripts", 3);
    Html.RequiresJs("FileUpload/tmpl.min.js", "Content", 5);
    Html.RequiresJs("Bootstrap/bootstrap.min.js", "Content", 6);
    Html.RequiresJs("FileUpload/jquery.iframe-transport.js", "Content", 10);
    Html.RequiresJs("FileUpload/jquery.fileupload.js", "Content", 10);
    Html.RequiresJs("FileUpload/jquery.fileupload-ui.js", "Content", 30);
    Html.RequiresJs("FileUpload/locale.js", "Content", 90);
    Html.RequiresJs("FileUpload/main.js", "Content", 99);
}

<!-- Shim to make HTML5 elements usable in older Internet Explorer versions -->
<!--[if lt IE 9]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

    <form id="fileupload" action="/Upload/UploadHandler.ashx" method="POST" enctype="multipart/form-data">
    @*<form id="fileupload" action="@Url.Action("UploadFiles")" method="POST" enctype="multipart/form-data">*@
        <input type="hidden" id="maxChunkSize" name="maxChunkSize" value="0" />

        <div class="row fileupload-buttonbar">
            <div class="span7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="icon-plus icon-white"></i>
                    <span>Add files...</span>
                    <input type="file" name="files[]" multiple>
                </span>
                @*<button type="reset" class="btn btn-warning cancel">
                    <i class="icon-ban-circle icon-white"></i>
                    <span>Cancel upload</span>
                </button>*@
                @*<button type="button" class="btn btn-danger delete">
                    <i class="icon-trash icon-white"></i>
                    <span>Delete</span>
                </button>*@
                @*<input type="checkbox" class="toggle">*@
            </div>
        </div>
        <br>
        <!-- The table listing the files available for upload/download -->
        <table class="table table-striped" id="filesTables">
            <tr>
                <th>File</th>
                <th>Description</th>
                @*<th>Size</th>*@
                <th>Signed?</th>
                <th>Embedded?</th>
                <th>Select Certificate</th>
                <th>Progress</th>
                <th>Action</th>
            </tr>
            <tbody class="files"></tbody>
        </table>
        <div class="pull-right fileupload-buttonbar">
            <button type="submit" class="btn btn-primary start">
                <i class="icon-upload icon-white"></i>
                <span>Upload</span>
            </button>
        </div>
    </form>


<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
        <tr class="template-upload fade">
            <td class="name"><span>{%=file.name%}</span></td>
            <td>
                <input type="text" id="fileDescription" name="fileDescription[]" class="text-box" />
            </td>
            @*<td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>*@
            {% if (file.error) { %}
            <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
            {% } else if (o.files.valid && !i) { %}
            <td>
                <input type="checkbox" id="chkIsSigned" name="chkIsSigned[]" onclick="ToggleNextElement(this);" />
            </td>
            <td>
                <input type="checkbox" id="chkIsEmbedded" name="chkIsEmbedded[]" disabled onclick="ToggleNextElement(this);" />
            </td>
            <td>
                {% if(!globalIsNextFileSignature) { %}
                <input type="file" id="certificateFile" name="certificateFile[]" disabled onclick="SetSignatureVariable();" onchange="AddToUploadList(this);" />
                <input type="hidden" name="certificateFileName[]" />
                {%= SetSignatureVariable() %}
                {% } %}
            </td>
            <td>
                <div class="progress progress-success progress-striped active">
                    <div class="bar" style="width:0%;" />
                </div>
            </td>
            <td class="start" hidden>
                {% if (!o.options.autoUpload) { %}
                <button class="btn btn-primary">
                    <i class="icon-upload icon-white"></i>
                    <span>{%=locale.fileupload.start%}</span>
                </button>
                {% } %}
            </td>
            <td class="cancel">
            {% if (!i) { %}
                <button class="btn btn-warning">
                    <i class="icon-ban-circle icon-white"></i>
                    <span>{%=locale.fileupload.cancel%}</span>
                </button>
                {% } %}
            </td>
            {% } else { %}
            <td colspan="2"></td>
            {% } %}
        </tr>
        {% } %}
    </script>

    <!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
        <tr class="template-download fade">
            {% if (file.error) { %}
            <td class="name"><span>{%=file.name%}</span></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            @*<td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>*@
            <td class="error" colspan="2">
                <span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}
            </td>
            {% } else { %}
            <td class="name">
                <span>{%=file.name%}</span>
                @*<a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}">{%=file.name%}</a>*@
            </td>
            <td class="description"><span>{%=document.getElementById("fileDescription").value%}</span></td>
            @*<td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>*@
            <td class="size"><span>{%=document.getElementById("chkIsSigned").checked ? 'Yes' : 'No'%}</span></td>
            <td class="size"><span>{%=document.getElementById("chkIsEmbedded").checked ? 'Yes' : 'No'%}</span></td>
            {% if(!globalIsNextFileSignature) { %}
            <td class="description"><span>{%=document.getElementById("certificateFile").value ? document.getElementById("certificateFile").value : 'N/A' %}</span></td>
            {% } %}
            <td><span class="label btn-success">Success!</span></td>
            {% } %}
            <td>N/A</td>
            @*<td class="delete">
                <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
                    <i class="icon-trash icon-white"></i>
                    <span>{%=locale.fileupload.destroy%}</span>
                </button>
            </td>*@
        </tr>
        {% } %}
</script>

<script type="text/javascript">

    var globalIsNextFileSignature = false;

    $(document).ready(function () {

        InitializeFileUploader();

        SetChunkSize();

    });

    function SetChunkSize() {
        $("#maxChunkSize").val($("#fileupload").fileupload('option').maxChunkSize);
    }

    function ToggleNextElement(sender) {

        var elementToToggle = $(sender).parent().next().children();
        var nextElement = $(elementToToggle).parent().next().children();

        if (elementToToggle.attr('disabled')) {
            elementToToggle.removeAttr('disabled');
        } else {
            elementToToggle.attr('disabled', 'disabled');
        }

        //Para o caso de desactivar o primeiro quando os outros estao activos
        if (elementToToggle.attr('disabled')) {
            elementToToggle.removeAttr('checked');
            nextElement.attr('disabled', 'disabled');
        }
        
    }

    function AddToUploadList(sender) {

        $('#fileupload').fileupload('add', { files: $(sender).prop("files") });

        //var signatureFile = $(sender).prop("files");

        //signatureFile.prop('isSignatureFile', 'true');

        //$('#fileupload').fileupload('add', { files: signatureFile });

        $(sender).next().attr('value', $(sender).prop("files")[0].name);
    }

    function InitializeFileUploader() {

        'use strict';
        // Initialize the jQuery File Upload widget:
        $('#fileupload').fileupload();

        $('#fileupload').fileupload('option', {
            maxFileSize: 9999999999,
            maxChunkSize: 1024 * 512, //512 KB
            singleFileUploads: 10,
            autoUpload: false
        });
    }

    function SetSignatureVariable() {

        globalIsNextFileSignature = true;
    }

</script>

